#ifndef NEKLIB_FRAME_H
#define NEKLIB_FRAME_H

#include <Impl/Window.h>
#include <Impl/Graphic.h>

#ifdef _DEBUG
#pragma comment(lib, "NekLib_d.lib")
#else
#pragma comment(lib, "NekLib.lib")
#endif

namespace NekLib
{

//FrameクラスはWindowクラスとGraphicクラスという2つのサブシステムへのファサードパターンとして働きます
class Frame
{
public:

	//インスタンスを得る
	
	static Frame* Get();

	//初期化
	bool Init(const char* title, int width, int height, bool consoleFlag, bool isWindowed,
		int x, int y, const HICON hIcon, const HCURSOR hCursor);
	bool Init(const char* title, int width, int height, bool consoleFlag, bool isWindowed);

	//ウインドウ、デバイスを作る
	bool Create();

	//メインループ
	template<typename Type>
	bool Run(Type* pType);
	bool Run(int (*Update)(), int (*Draw)());

	//アクセサー

	int Width() const;
	int Height() const;

private:
	//生成コピー代入を禁止する
	Frame();
	Frame(const Frame& rhs);
	Frame& operator=(const Frame& rhs);
	~Frame(){}


	//描画終始
	bool Begin();
	bool End();

	Window* pWindow;	//Windowクラスのポインタ
	Graphic* pGraphic;	//Graphicクラスのポインタ
};

template <typename Type>
bool Frame::Run(Type* pType)
{
	while(pWindow->ProcessMessage())
	{
		//更新
		pType->Update();

		Begin();

		//描画
		pType->Draw();

		End();
	}

	return true;
}

}//namespace NekLib

#endif